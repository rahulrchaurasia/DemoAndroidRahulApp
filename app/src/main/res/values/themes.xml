<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme. -->
    <!--Note : Always use no action bar here.... -->
    <style name="Theme.DemoAndroidApp" parent="Theme.MaterialComponents.Light.NoActionBar">
        <!-- Primary brand color. -->
        <item name="colorPrimary">@color/purple_500</item>  <!--toolbar color-->
        <item name="colorPrimaryVariant">@color/purple_700</item> <!-- status bar color-->

        <item name="colorPrimaryDark">@color/header_light_text</item>
        <item name="colorOnPrimary">@color/black</item> <!-- Text labels,Icons, Navigation drawer items ,App bar titl-->
        <!-- Secondary brand color. -->
        <item name="colorSecondary">@color/teal_200</item>
        <item name="colorSecondaryVariant">@color/teal_700</item>
        <item name="colorOnSecondary">@color/black</item>

       <!-- colorSecondary : used: Buttons , Selection controls , Progress bars ,Links and headlines-->

<!--        If you're working on a new project, avoid using ******"colorAccent"***** and adopt
            **************colorSecondary***************** instead.-->
<!--        For existing projects using older Material Design themes, consider migrating to colorSecondary for consistency and better accessibility.-->

<!--        colorSurface: Used for "sheets" of material (like cards and bottom sheets).-->

        <!-- Status bar color. -->
<!--        <item name="android:statusBarColor">@color/purple_500</item>-->
        <item name="android:statusBarColor">@color/appBase</item>
        <!-- Customize your theme here. -->

<!--        <item name="fontFamily">@font/inter_regular</item>-->
<!--        <item name="bottomSheetDialogTheme">@style/OvalBottomSheetDialogTheme</item>-->

<!--          for bottomsheet Dialog apply-->
        <item name="bottomSheetDialogTheme">@style/AppBottomSheetDialogTheme</item>

        <!-- edittext style-->
        <item name="textInputStyle">@style/outlined_edittext</item>

        <item name="android:windowBackground">@color/bg</item>




    </style>

<!--     For Handling Toolbar in Fragmnet of Navigation Comp we need to remove default NoActionBar theme  -->
    <style name="Theme.DemoAndroidApp.AppBarOverlay" parent="ThemeOverlay.AppCompat.Dark.ActionBar" />

    <style name="Theme.DemoAndroidApp.PopupOverlay" parent="ThemeOverlay.AppCompat.Light" />

     <!--  for bottomsheet Dialog Theme  -->
    <style name="AppBottomSheetDialogTheme" parent="Theme.Design.Light.BottomSheetDialog">
        <item name="bottomSheetStyle">@style/AppModalStyle</item>
        <item name="android:windowIsTranslucent">true</item>
        <item name="android:windowContentOverlay">@null</item>

    </style>

    <style name="AppModalStyle"
        parent="Widget.Design.BottomSheet.Modal">
        <item name="android:background">@drawable/oval_dialog_background</item>
    </style>

<!--    <style name="CustomDialog" parent="Theme.AppCompat.Light.Dialog">-->

<!--        <item name="android:windowIsTranslucent">true</item>-->

<!--        <item name="android:windowAnimationStyle">@style/CustomDialogAnimation</item>-->
<!--        &lt;!&ndash;            <item name="android:windowBackground">@color/transparent_color</item>&ndash;&gt;&ndash;&gt;-->

<!--        <item name="android:windowBackground">@android:color/transparent</item>-->
<!--        <item name="android:windowContentOverlay">@null</item>-->
<!--        <item name="android:windowNoTitle">true</item>-->
<!--        <item name="android:windowIsFloating">true</item>-->
<!--        <item name="android:backgroundDimEnabled">true</item>-->

<!--        <item name="android:colorBackgroundCacheHint">@null</item>-->
<!--        <item name="android:windowTranslucentStatus">true</item>-->
<!--        &lt;!&ndash;        <item name="android:windowAnimationStyle">@android:style/Animation</item>&ndash;&gt;-->


<!--    </style>-->

    <!--Style Edit text-->
    <style name="outlined_edittext" parent="Widget.MaterialComponents.TextInputLayout.OutlinedBox">
        <item name="boxStrokeWidth">0.6dp</item> <!--before focused width-->
        <item name="boxStrokeWidthFocused">1dp</item><!--after focused width-->
        <item name="boxBackgroundColor">@color/white</item>
        <item name="boxStrokeColor">@color/secondary_text_color</item>

        <!--icon color inside box-->
        <item name="endIconTint">@color/secondary_text_color</item>
        <!--box color when error -->
        <item name="boxStrokeErrorColor">@color/error</item>
        <!--text color-->
        <item name="android:textColor">@color/primary_text_color</item>
        <!--after selecting edittext header text color-->
        <item name="hintTextColor">@color/primary_text_color</item>
        <!--before hint text color-->
        <item name="android:textColorHint">@color/secondary_text_color</item>

        <!--Error show specific to edittext with error message-->
        <item name="errorEnabled">true</item>
        <item name="errorTextColor">@color/error</item>

        <item name="android:inputType">text</item>
        <item name="android:imeOptions">actionNext</item>
        <item name="android:lines">1</item>
        <item name="fontFamily">@font/inter_regular</item>
    </style>


    <style name="TextInputMaterialStyleDropDown" parent="Widget.MaterialComponents.TextInputLayout.FilledBox.ExposedDropdownMenu">
        <item name ="boxBackgroundMode">filled</item>
        <item name ="boxBackgroundColor">@color/primary_light_color</item>

        <item name="hintTextColor">@color/header_text_color</item>
        <item name="startIconTint">@color/color_close</item>
    </style>


    <style name="TextInputMaterialStyleFilledBox" parent="Widget.MaterialComponents.TextInputLayout.FilledBox">
        <item name ="boxBackgroundMode">filled</item>
        <item name ="boxBackgroundColor">@color/primary_light_color</item>

        <item name="hintTextColor">@color/header_text_color</item>
        <item name="startIconTint">@color/color_close</item>

    </style>

    <style name="TextInputMaterialStyleOthFilledBox" parent="Widget.MaterialComponents.TextInputLayout.FilledBox">
        <item name ="boxBackgroundMode">filled</item>
        <item name ="boxBackgroundColor">@color/primary_light_color</item>

        <item name="hintTextColor">@color/white</item>
        <item name="startIconTint">@color/white</item>

    </style>
    <style name="TextInputMaterialStyle" parent="Widget.MaterialComponents.TextInputLayout.OutlinedBox">

        <item name="hintTextColor">@color/header_text_color</item>
        <item name="startIconTint">@color/color_close</item>
        <item name="endIconTint">@color/color_close</item>
        <item name="boxStrokeColor">@color/black</item>

        <item name="endIconMode">clear_text</item>

    </style>

    <style name="TextInputMaterialOthStyle" parent="Widget.MaterialComponents.TextInputLayout.OutlinedBox">

        <item name="hintTextColor">@color/white</item>
        <item name="android:textColorHint">@color/white</item>


        <!--        <item name="colorControlNormal">@color/white</item>-->
        <!--        <item name="colorControlActivated">@color/white</item>-->
        <!--        <item name="colorControlHighlight">@color/white</item>-->


        <item name="startIconTint">@color/white</item>
        <item name="endIconTint">@color/white</item>
        <item name="boxStrokeColor">@color/edit_text_box_border</item>
        <item name="boxStrokeWidth">2dp</item>


        <item name="endIconMode">clear_text</item>

    </style>




    <!--Dialog style   we can add custom dialog functinality here..-->
    <style name="ThemeOverlay.App.MaterialAlertDialog" parent="ThemeOverlay.MaterialComponents.MaterialAlertDialog">
        <item name="colorPrimary">@color/white</item>
        <item name="colorSecondary">@color/white</item>
        <item name="colorSurface">@color/white</item>
        <!--body text color -->
        <item name="colorOnSurface">@color/primary_text_color</item>
        <item name="alertDialogStyle">@style/MaterialAlertDialog.App</item>
        <!--title text color-->
        <item name="materialAlertDialogTitleTextStyle">@style/MaterialAlertDialog.App.Title.Text
        </item>
        <!-- <item name="buttonBarPositiveButtonStyle">@style/Widget.App.Button</item>
         <item name="buttonBarNeutralButtonStyle">@style/Widget.App.Button</item>
         <item name="buttonBarNegativeButtonStyle">@style/Widget.App.Button.Negative</item>-->
    </style>



    <style name="MaterialAlertDialog.App" parent="MaterialAlertDialog.MaterialComponents">
        <item name="shapeAppearance">@style/ShapeAppearance.App.MediumComponent</item>
    </style>

    <style name="MaterialAlertDialog.App.Title.Text" parent="MaterialAlertDialog.MaterialComponents.Title.Text">
        <item name="android:textColor">@color/primary_text_color</item>
    </style>

    <style name="Widget.App.Button" parent="Widget.MaterialComponents.Button.TextButton.Dialog">
        <item name="materialThemeOverlay">
            @style/Widget.MaterialComponents.Button.TextButton.Dialog
        </item>
        <item name="shapeAppearance">@style/ShapeAppearance.App.SmallComponent</item>
        <item name="android:textColor">@color/orange</item>
        <item name="android:textStyle">normal</item>
    </style>

    <style name="Widget.App.Button.Negative" parent="Widget.App.Button">
        <item name="android:textColor">@color/primary_text_color</item>
    </style>

    <style name="ShapeAppearance.App.MediumComponent" parent="ShapeAppearance.MaterialComponents.MediumComponent">
        <item name="cornerFamily">rounded</item>
        <item name="cornerSize">8dp</item>
    </style>

    <style name="ShapeAppearance.App.SmallComponent" parent="ShapeAppearance.MaterialComponents.SmallComponent">
        <item name="cornerFamily">rounded</item>
        <item name="cornerSize">4dp</item>
    </style>


    <style name="card_view" parent="Widget.MaterialComponents.CardView">
        <item name="cardElevation">4dp</item>
        <item name="android:radius">10dp</item>
        <item name="cornerSizeTopRight">16dp</item>
        <item name="cornerSizeTopLeft">16dp</item>
        <item name="cornerSizeBottomRight">16dp</item>
        <item name="cornerSizeBottomLeft">16dp</item>
        <item name="cardCornerRadius">16dp</item>
    </style>

    <style name="ShapeAppearanceOverlay_card_custom_corners" parent="">
        <item name="cornerFamily">rounded</item>
        <item name="cornerSizeTopRight">32dp</item>
        <item name="cornerSizeTopLeft">32dp</item>
        <item name="cornerSizeBottomRight">0dp</item>
        <item name="cornerSizeBottomLeft">0dp</item>

    </style>

    <style name="top_round_card_view" parent="@style/Widget.MaterialComponents.CardView">
        <item name="shapeAppearanceOverlay">@style/ShapeAppearanceOverlay_card_custom_corners</item>
    </style>


    <style name="ImageView.Corner" parent="Widget.MaterialComponents.CardView">
        <item name="cornerSizeTopRight">0dp</item>
        <item name="cornerSizeTopLeft">8dp</item>
        <item name="cornerSizeBottomLeft">8dp</item>
        <item name="cornerSizeBottomRight">0dp</item>
        <item name="cornerFamily">rounded</item>
    </style>

</resources>